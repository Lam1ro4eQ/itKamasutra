{"version":3,"sources":["p2-homeworks/h1/Message.module.css","p2-homeworks/h5-rrd-v6/Header.module.css","p2-homeworks/h2/Affairs.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h2/Affair.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h6/common/c4-SuperEditableSpan/span.module.css","p2-homeworks/h5-rrd-v6/pages/Junior.tsx","p2-homeworks/h5-rrd-v6/pages/JuniorPlus.tsx","p2-homeworks/h5-rrd-v6/pages/Error404.tsx","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.tsx","p2-homeworks/h6/localStorage/localStorage.ts","p2-homeworks/h6/HW6.tsx","p2-homeworks/h7/common/c5-SuperSelect/SuperSelect.tsx","p2-homeworks/h7/common/c6-SuperRadio/SuperRadio.tsx","p2-homeworks/h7/HW7.tsx","p2-homeworks/h5-rrd-v6/pages/PreJunior.tsx","p2-homeworks/h5-rrd-v6/Pages.tsx","p2-homeworks/h5-rrd-v6/Header.tsx","p2-homeworks/h5-rrd-v6/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Junior","JuniorPlus","Error404","Message","props","className","style","master","imgFlex","imgMessage","src","avatar","messageFlex","insertFlexMessage","myName","name","myMessage","message","insertFlexTime","myTime","time","messageData","HW1","Affair","affair","mainLLine","affairName","affairPriority","priority","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","affairs","mainButton","setFilter","defaultAffairs","HW2","useState","setAffairs","filter","filteredAffairs","t","filterAffairs","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","onEnter","inputClass","s","errorInput","value","onChange","onBlur","onKeyPress","GreetingContainer","users","addUserCallback","setName","setError","length","e","enterName","currentTarget","key","trim","alert","trimmedNewName","HW3","setUsers","newName","v1","SuperInputText","type","onChangeText","spanClassName","restProps","finalSpanClassName","finalInputClassName","superInput","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","text","setText","showAlert","setChecked","column","blue","disabled","SuperEditableSpan","autoFocus","spanProps","editMode","setEditMode","onDoubleClick","restSpanProps","span","saveState","state","stateAsString","JSON","stringify","localStorage","setItem","restoreState","defaultState","getItem","parse","x","y","HW6","setValue","undefined","SuperSelect","options","onChangeOption","mappedOptions","o","index","SuperRadio","onChangeCallback","i","arr","HW7","PreJunior","PATH","Pages","path","element","to","Header","n","nav","isActive","PreJuniorLink","JuniorLink","JuniorPlusLink","block","HW5","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.7e557ea8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"master\":\"Message_master__D-MYp\",\"imgFlex\":\"Message_imgFlex__y5mi-\",\"imgMessage\":\"Message_imgMessage__sMy1S\",\"messageFlex\":\"Message_messageFlex__2ByZI\",\"myName\":\"Message_myName__sHp14\",\"myMessage\":\"Message_myMessage__3ZMiS\",\"insertFlexTime\":\"Message_insertFlexTime__2vSwN\",\"insertFlexMessage\":\"Message_insertFlexMessage__Wf8to\",\"myTime\":\"Message_myTime__ZTBnC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Header_nav__D1Be2\",\"active\":\"Header_active__wuAMd\",\"PreJuniorLink\":\"Header_PreJuniorLink__dedhq\",\"JuniorLink\":\"Header_JuniorLink__Va2FC\",\"JuniorPlusLink\":\"Header_JuniorPlusLink__36JCB\",\"block\":\"Header_block__1Q1xC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Affairs_someClass__T3_Xv\",\"mainButton\":\"Affairs_mainButton__1skp9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__3ZyCE\",\"errorInput\":\"SuperInputText_errorInput__3QfFN\",\"error\":\"SuperInputText_error__2R4WL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Affair_someClass__1nJH1\",\"mainLLine\":\"Affair_mainLLine__33z3X\",\"affairName\":\"Affair_affairName__1CVkd\",\"affairPriority\":\"Affair_affairPriority__-EZeb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__zfvLM\",\"column\":\"HW4_column__C1qVX\",\"testSpanError\":\"HW4_testSpanError__3pQvj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__2Lyt4\",\"red\":\"SuperButton_red__2Qhqt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__QyyD_\",\"spanClassName\":\"SuperCheckbox_spanClassName__6bxi_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__z4jG6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Greeting_someClass__3p59L\",\"errorInput\":\"Greeting_errorInput__2SbG5\",\"input\":\"Greeting_input__1qd60\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"span\":\"span_span__3QL6m\"};","import React from 'react'\n\n\nfunction Junior() {\n    return (\n        <div>\n        <h1>Junior</h1>\n\n        </div>\n    )\n}\n\nexport default Junior\n\n// сделайте по аналогии пустые страницы джун и джун+\n// туда будут добавляться следующие дз","import React from 'react'\n\n\nfunction JuniorPlus() {\n    return (\n        <div>\n            <h1>JuniorPlus</h1>\n\n        </div>\n    )\n}\n\nexport default JuniorPlus\n\n// сделайте по аналогии пустые страницы джун и джун+\n// туда будут добавляться следующие дз","import React from 'react'\n\nfunction Error404() {\n    return (\n        <div>\n            <div>404</div>\n            <div>Page not found!</div>\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\n        </div>\n    )\n}\n\nexport default Error404\n","import React from 'react'\nimport style from './Message.module.css'\n\n\nexport type PropsType = {\n    avatar: string\n    name: string\n    message: string\n    time: string\n}\n\ntype MessageType = {\n    avatar: string\n    name: string\n    message: string\n    time: string\n}\n\nfunction Message(props: PropsType) {\n    return (\n        <div className={style.master}>\n            <div className={style.imgFlex}>\n                <img className={style.imgMessage} src={props.avatar}/>\n            </div>\n            <div className={style.messageFlex}>\n                <div className={style.insertFlexMessage}>\n                    <div className={style.myName}>{props.name}</div>\n                    <div className={style.myMessage}>{props.message}</div>\n                </div>\n                <div className={style.insertFlexTime}>\n                    <div className={style.myTime}>{props.time}</div>\n                </div>\n            </div>\n\n        </div>\n    )\n}\n\nexport default Message\n","import React from 'react'\nimport Message from './Message'\n\nconst messageData = {\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\n    name: 'Alex',\n    message: 'My Message My Message',\n    time: '22:00',\n}\n\nfunction HW1() {\n    return (\n        <div>\n            <hr/>\n            homeworks 1\n\n            {/*should work (должно работать)*/}\n\n            <Message\n                avatar={messageData.avatar}\n                name={messageData.name}\n                message={messageData.message}\n                time={messageData.time}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeMessage/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW1\n","import React from 'react'\nimport {AffairType} from \"./HW2\";\nimport affair from './Affair.module.css'\n\ntype AffairPropsType = {\n    // key не нужно типизировать\n    affair: AffairType // need to fix any\n    deleteAffairCallback: (_id: number) => void // need to fix any\n}\n\nfunction Affair(props: AffairPropsType) {\n    const deleteCallback = () => {props.deleteAffairCallback(props.affair._id)}// need to fix\n\n    return (\n        <div className={affair.mainLLine}>\n            <span className={affair.affairName}>{props.affair.name}</span>\n            <span className={affair.affairPriority}>{props.affair.priority}</span>\n            <button onClick={deleteCallback}>X</button>\n        </div>\n    )\n}\n\nexport default Affair\n\n\n// const terstArr = [{id:1,name:\"tets\"}, {id:1,name:\"tets\"}]  //Array<AffairType>\n// const terst = {id:1,name:\"tets\"}  //AffairType","import React from 'react'\nimport Affair from './Affair'\nimport {AffairType, FilterType} from './HW2'\nimport affairs from './Affairs.module.css'\n\ntype AffairsPropsType = { // need to fix any\n    data: Array<AffairType>\n    setFilter: (value: FilterType) => void\n    deleteAffairCallback: (_id: number) => void\n}\n\nfunction Affairs(props: AffairsPropsType) {\n    const mappedAffairs = props.data.map((affair: AffairType) => (\n        <Affair // should work\n            key={affair._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\n            affair={affair}\n            deleteAffairCallback={props.deleteAffairCallback}\n        />\n    ))\n\n    const setAll = () => {props.setFilter('all')} // need to fix\n    const setHigh = () => {props.setFilter('high')}\n    const setMiddle = () => {props.setFilter('middle')}\n    const setLow = () => {props.setFilter('low')}\n\n    return (\n        <div>\n\n            {mappedAffairs}\n\n            <button className={affairs.mainButton} onClick={setAll}>All</button>\n            <button className={affairs.mainButton} onClick={setHigh}>High</button>\n            <button className={affairs.mainButton} onClick={setMiddle}>Middle</button>\n            <button className={affairs.mainButton} onClick={setLow}>Low</button>\n        </div>\n    )\n}\n\nexport default Affairs\n","import React, {useState} from 'react'\nimport Affairs from './Affairs'\n\n// types\nexport type AffairPriorityType = \"high\" | \"low\" | \"middle\" // need to fix any\nexport type AffairType = {\n    _id: number\n    name: string\n    priority: string\n} // need to fix any\nexport type FilterType = 'all' | AffairPriorityType\n\n\n// constants\nconst defaultAffairs: Array<AffairType> = [ // need to fix any\n    {_id: 1, name: 'React', priority: 'high'},\n    {_id: 2, name: 'anime', priority: 'low'},\n    {_id: 3, name: 'games', priority: 'low'},\n    {_id: 4, name: 'work', priority: 'high'},\n    {_id: 5, name: 'html & css', priority: 'middle'},\n]\n\n// pure helper functions\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => { // need to fix any\n    if (filter === 'all') {\n        return affairs; //todo логику фильтрации\n    }\n    if (filter === 'high') {\n        let filteredAffairs = affairs.filter(t => t.priority === 'high');\n        return filteredAffairs;\n    }\n    if (filter === 'low') {\n        let filteredAffairs = affairs.filter(t => t.priority === 'low');\n        return filteredAffairs;\n    }\n    if (filter === 'middle') {\n        let filteredAffairs = affairs.filter(t => t.priority === 'middle');\n        return filteredAffairs;\n    }\n    return affairs //need to fix\n}\n\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => { // need to fix any\n    let deletedAffair = affairs.filter(t => t._id !== _id);\n    return deletedAffair;\n}\n\nfunction HW2() {\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs) // need to fix any\n    const [filter, setFilter] = useState<FilterType>('all')\n\n    const filteredAffairs = filterAffairs(affairs, filter)\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)) // need to fix any\n\n    return (\n        <div>\n            <hr/>\n            homeworks 2\n\n            {/*should work (должно работать)*/}\n            <Affairs\n                data={filteredAffairs}\n                setFilter={setFilter}\n                deleteAffairCallback={deleteAffairCallback}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeAffairs/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW2\n","import React, {ChangeEvent, KeyboardEvent} from 'react'\nimport s from './Greeting.module.css'\n\n\ntype GreetingPropsType = {\n    name: string // need to fix any\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void // need to fix any\n    addUser: () => void // need to fix any\n    error: string // need to fix any\n    totalUsers: number // need to fix any\n    onEnter: (e: KeyboardEvent<HTMLInputElement>)  => void\n}\n\n   \n    \n\n\n// презентационная компонента (для верстальщика)\nconst Greeting: React.FC<GreetingPropsType> = (\n    {name, setNameCallback, addUser, error, totalUsers, onEnter} // деструктуризация пропсов\n) => {\n    const inputClass = error ? s.errorInput : \"\" // need to fix with (?:)\n\n    return (\n        <div>\n            <div>\n                <input value={name} onChange={setNameCallback} className={inputClass} onBlur={setNameCallback} onKeyPress={onEnter}/>\n\n                <button onClick={addUser}>add</button>\n                <span>{totalUsers}</span>\n            </div>\n            <div>{error}</div>\n        </div>\n    )\n}\n\nexport default Greeting\n","import React, {useState, ChangeEvent, KeyboardEvent} from 'react'\nimport Greeting from './Greeting'\n\ntype GreetingContainerPropsType = {\n    users: Array<UserType> // need to fix any\n    addUserCallback: (name: string) => void // need to fix any\n}\ntype UserType = {\n    _id: string\n    name: string\n}\n\n// более простой и понятный для новичков\n// function GreetingContainer(props: GreetingPropsType) {\n\n// более современный и удобный для про :)\n// уровень локальной логики\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\n    const [name, setName] = useState<string>('') // need to fix any\n    const [error, setError] = useState<string>('') // need to fix any\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => { // need to fix any\n        const enterName = e.currentTarget.value;\n        if (enterName !== \"\") {\n            setName(enterName); // need to fix\n            error && setError(''); // зануляем ошибку если она там была\n        } else {\n            setName('');\n        }\n    }\n    const addUser = () => {\n        const trimmedNewName = name.trim();\n        if (trimmedNewName === \"\") {\n            setError('name is requared!!');\n            return;\n        } else {\n            addUserCallback(trimmedNewName)\n            alert(`Hello ${trimmedNewName} !`); // need to fix\n            setName('');\n        }\n    }\n\n    const onEnter = (e: KeyboardEvent<HTMLInputElement>) => {\n        if (e.key === \"Enter\" && name) {\n            addUserCallback(name.trim());\n            alert(`Hello ${name.trim()} !`);\n            setName('');\n        } else {\n            setError('name is requared!!');\n        }\n    }\n\n    const totalUsers = users.length // need to fix\n\n    return (\n        <Greeting\n            name={name}\n            setNameCallback={setNameCallback}\n            onEnter={onEnter}\n            addUser={addUser}\n            error={error}\n            totalUsers={totalUsers}\n        />\n    )\n}\n\nexport default GreetingContainer\n","import React, {useState} from 'react'\nimport GreetingContainer from './GreetingContainer'\n\nimport {v1} from \"uuid\";\n\n// types\nexport type UserType = {\n    _id: string // need to fix any\n    name: string // need to fix any\n}\n\n// уровень работы с глобальными данными\nfunction HW3() {\n    const [users, setUsers] = useState<Array<UserType>>([]) // need to fix any\n\n    const addUserCallback = (name: string) => { // need to fix any\n        let newName: UserType = {\n            _id: v1(),\n            name: name\n        }\n        setUsers([...users, newName]) // need to fix\n    }\n\n    return (\n        <div>\n            <hr/>\n            homeworks 3\n\n            {/*should work (должно работать)*/}\n            <GreetingContainer \n                users={users}\n                addUserCallback={addUserCallback}\n            />\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeGreeting/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW3\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\nimport s from './SuperInputText.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n}\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value)\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        onEnter // если есть пропс onEnter\n        && e.key === 'Enter' // и если нажата кнопка Enter\n        && onEnter() // то вызвать его 1ц\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\n    const finalInputClassName = `${s.superInput} ${error ? s.errorInput : s.superInput}` // need to fix with (?:) and s.superInput\n\n    return (\n        <>\n            <input\n                type={'text'}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    )\n}\n\nexport default SuperInputText\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './SuperButton.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${red ? s.red : s.default} ${className}`\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    )\n}\n\nexport default SuperButton\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\nimport s from './SuperCheckbox.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n}\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange && onChange(e)\n\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\n\n    return (\n        <label>\n            <input\n                type={'checkbox'}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    )\n}\n\nexport default SuperCheckbox\n","import React, {ChangeEvent, useState} from 'react'\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\nimport s from './HW4.module.css'\nimport SuperButton from './common/c2-SuperButton/SuperButton'\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\n\nfunction HW4() {\n    const [text, setText] = useState<string>('')\n    const error = text ? '' : 'error'\n\n    const showAlert = () => {\n        if (error) {\n            alert('введите текст...')\n        } else {\n            alert(text) // если нет ошибки показать текст\n        }\n    }\n\n    const [checked, setChecked] = useState<boolean>(false)\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\n\n    return (\n        <div>\n            <hr/>\n            homeworks 4\n\n            <div className={s.column}>\n                <SuperInputText\n                    value={text}\n                    onChangeText={setText}\n                    onEnter={showAlert}\n                    error={error}\n                    // spanClassName={s.testSpanError}\n                />\n\n                <SuperInputText\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\n                />\n\n                {/*----------------------------------------------------*/}\n\n                <SuperButton>\n                    default\n                </SuperButton>\n\n                <SuperButton\n                    red // пропсу с булевым значением не обязательно указывать true\n                    onClick={showAlert}\n                >\n                    delete {/*// название кнопки попадёт в children*/}\n                </SuperButton>\n\n                <SuperButton disabled>\n                    disabled\n                </SuperButton>\n\n                {/*----------------------------------------------------*/}\n\n                <SuperCheckbox\n                    checked={checked}\n                    onChangeChecked={setChecked}\n                >\n                    some text {/*// этот текст попадёт в children*/}\n                </SuperCheckbox>\n\n                {/*// onChange тоже должен работать*/}\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperInputText/>*/}\n            {/*<AlternativeSuperButton/>*/}\n            {/*<AlternativeSuperCheckbox/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW4\n","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from 'react'\nimport SuperInputText from '../../../h4/common/c1-SuperInputText/SuperInputText'\nimport s from '../c4-SuperEditableSpan/span.module.css'\n\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n// тип пропсов обычного спана\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n\n    spanProps?: DefaultSpanPropsType // пропсы для спана\n}\n\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\n    {\n        autoFocus, // игнорировать изменение этого пропса\n        onBlur,\n        onEnter,\n        spanProps,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const [editMode, setEditMode] = useState<boolean>(false)\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {}\n\n    const onEnterCallback = () => {\n        setEditMode(!editMode)  // выключить editMode при нажатии Enter\n\n        onEnter && onEnter()\n    }\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\n        setEditMode(!editMode)  // выключить editMode при нажатии за пределами инпута\n\n        onBlur && onBlur(e)\n    }\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\n         setEditMode(!editMode)\n        // включить editMode при двойном клике\n\n        onDoubleClick && onDoubleClick(e)\n    }\n\n    const spanClassName = `${s.span} ${className ? className : \"\"}`\n    // const inputClassName = `${s.input} ${className ? className : \"\"}`\n\n    return (\n        <>\n            {editMode\n                ? (\n                    <SuperInputText\n                        autoFocus // пропсу с булевым значением не обязательно указывать true\n                        onBlur={onBlurCallback}\n                        onEnter={onEnterCallback}\n                        // className={inputClassName}\n\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n                    />\n                ) : (\n                    <span\n                        onDoubleClick={onDoubleClickCallBack}\n                        className={spanClassName}\n\n                        {...restSpanProps}\n                    >\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\n                        ✎{children || restProps.value}\n                    </span>\n                )\n            }\n        </>\n    )\n}\n\nexport default SuperEditableSpan\n","// вот вам функция для сохранения объектов в память браузера\n// (данные в этом хранилище сохраняться даже при перезагрузке компа):\nexport function saveState<T>(key: string, state: T) {\n    const stateAsString = JSON.stringify(state)\n    localStorage.setItem(key, stateAsString)\n}\n\n// и вот вам функция для получения сохранённого объекта в памяти браузера:\nexport function restoreState<T>(key: string, defaultState: T) {\n    let state = defaultState\n    const stateAsString = localStorage.getItem(key)\n    if (stateAsString !== null) state = JSON.parse(stateAsString) as T\n    return state\n}\n\n// ---------------------------------------------------------------------------------------------------------------\n// пример использования:\ntype StateType = {\n    x: string\n    y: number\n}\n\n// сохраняем объект типа StateType в ячейке 'test'\nsaveState<StateType>('test', {x: 'A', y: 1})\n\n// получем в переменную state объект из ячейки 'test' или дэфолтный объект если ячейка пуста\nconst state: StateType = restoreState<StateType>('test', {x: '', y: 0})\n","import React, {useState} from 'react'\nimport SuperEditableSpan from './common/c4-SuperEditableSpan/SuperEditableSpan'\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton'\nimport {restoreState, saveState} from './localStorage/localStorage'\n\nfunction HW6() {\n    const [value, setValue] = useState<string>('')\n\n    const save = () => {\n        saveState<string>('editable-span-value', value)\n    }\n    const restore = () => {\n        setValue(restoreState('editable-span-value',value ))\n    }\n\n    return (\n        <div>\n            <hr/>\n            homeworks 6\n\n            {/*should work (должно работать)*/}\n            <div>\n                <SuperEditableSpan\n                    value={value}\n                    onChangeText={setValue}\n                    spanProps={{children: value ? undefined : 'enter text...'}}\n                />\n            </div>\n            \n            <SuperButton onClick={save}>save</SuperButton>\n            <SuperButton onClick={restore}>restore</SuperButton>\n            \n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperEditableSpan/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW6\n","import React, {SelectHTMLAttributes, DetailedHTMLProps, ChangeEvent} from 'react'\n\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\n\ntype SuperSelectPropsType = DefaultSelectPropsType & {\n    options?: Array<string>\n    onChangeOption?: (option: string) => void\n}\n\nconst SuperSelect: React.FC<SuperSelectPropsType> = (\n    {\n        options,\n        onChange,\n        onChangeOption,\n        ...restProps\n    }\n) => {\n    const mappedOptions: Array<any> = options ? options.map((o, index) => (\n         <option key={`${index}_${o}`} value={o}>{o}</option>\n    )) : []; // map options with key\n\n    const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\n        onChange && onChange(e)// onChange, onChangeOption\n        onChangeOption && onChangeOption(e.currentTarget.value)\n    }\n\n    return (\n        <select onChange={onChangeCallback} {...restProps}>\n            {mappedOptions}\n        </select>\n    )\n}\n\nexport default SuperSelect\n","import React, {ChangeEvent, InputHTMLAttributes, DetailedHTMLProps} from 'react'\n\ntype DefaultRadioPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperRadioPropsType = DefaultRadioPropsType & {\n    options?: Array<string>\n    onChangeOption?: (option: string) => void\n}\n\nconst SuperRadio: React.FC<SuperRadioPropsType> = (\n    {\n        type, name,\n        options, value,\n        onChange, onChangeOption,\n        ...restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange && onChange(e)// onChange, onChangeOption\n        onChangeOption && onChangeOption(e.currentTarget.value)\n    }\n\n\n    const mappedOptions: Array<any> = options ? options.map((o, i) => ( // map options with key\n        <label key={name + '-' + i}>\n            <input\n                type={'radio'}\n                name={name}\n                checked={o === value}\n                onChange={onChangeCallback}\n                value={o}\n                {...restProps}\n                // name, checked, value, onChange\n            />\n            {o}\n        </label>\n    )) : []\n\n    return (\n        <>\n            {mappedOptions}\n        </>\n    )\n}\n\nexport default SuperRadio\n","import React, {useState} from 'react'\nimport SuperSelect from './common/c5-SuperSelect/SuperSelect'\nimport SuperRadio from './common/c6-SuperRadio/SuperRadio'\n\nconst arr = ['x', 'y', 'z']\n\nfunction HW7() {\n    const [value, onChangeOption] = useState(arr[1])\n\n    return (\n        <div>\n            <hr/>\n            homeworks 7\n\n            {/*should work (должно работать)*/}\n            <div>\n                <SuperSelect\n                    options={arr}\n                    value={value}\n                    onChangeOption={onChangeOption}\n                />\n            </div>\n            <div>\n                <SuperRadio\n                    name={'radio'}\n                    options={arr}\n                    value={value}\n                    onChangeOption={onChangeOption}\n                />\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperSelect/>*/}\n            {/*<AlternativeSuperRadio/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW7\n","import React from 'react'\nimport HW1 from '../../h1/HW1'\nimport HW2 from '../../h2/HW2'\nimport HW3 from '../../h3/HW3'\nimport HW4 from '../../h4/HW4'\nimport HW6 from '../../h6/HW6'\nimport HW7 from '../../h7/HW7'\n\nexport function PreJunior() {\n    return (\n        <div>\n            <HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/>\n            <HW6/>\n            <HW7/>\n\n        </div>\n    )\n}\n\n// сделайте по аналогии пустые страницы джун и джун+\n// туда будут добавляться следующие дз","import React from 'react';\nimport {Routes, Route, Navigate} from 'react-router-dom';\nimport Junior from './pages/Junior'\nimport JuniorPlus from './pages/JuniorPlus'\nimport Error404 from './pages/Error404'\nimport {PreJunior} from './pages/PreJunior';\n\nexport const PATH = {\n    PRE_JUNIOR: '/pre-junior',\n    JUNIOR: '/junior',\n    JUNIOR_PLUS: '/junior-plus',\n    // add paths\n}\n\nfunction Pages() {\n    return (\n\n        <div>\n\n            {/*Switch выбирает первый подходящий роут*/}\n            <Routes>\n\n                {/*в начале мы попадаем на страницу '/' и переходим сразу на страницу PRE_JUNIOR*/}\n                {/*exact нужен чтоб указать полное совподение (что после '/' ничего не будет)*/}\n                <Route path={'/*'} element={<Navigate to={PATH.PRE_JUNIOR}/>}/>\n\n                <Route path={PATH.PRE_JUNIOR} element={<PreJunior/>}/>\n                <Route path={PATH.JUNIOR} element={<Junior/>}/>\n                <Route path={PATH.JUNIOR_PLUS} element={<JuniorPlus/>}/>\n                // add routes\n\n                {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\n                <Route path={'*'} element={() => <Error404/>}/>\n\n            </Routes>\n\n        </div>\n    )\n}\n\nexport default Pages\n","import React from 'react'\nimport {NavLink} from 'react-router-dom'\nimport n from './Header.module.css'\nimport {PATH} from './Pages'\n\n\nfunction Header() {\n    return (\n        <div>\n            <nav className={n.nav}>\n                <NavLink className={({isActive}) => isActive ? 'n.active' : '' + ' ' + n.PreJuniorLink }  to={PATH.PRE_JUNIOR}>PreJunior</NavLink>\n                <NavLink className={({isActive}) => isActive ? 'n.active' : '' + ' ' + n.JuniorLink} to={PATH.JUNIOR}>Junior</NavLink>\n                <NavLink className={({isActive}) => isActive ? 'n.active' : '' + ' ' + n.JuniorPlusLink} to={PATH.JUNIOR_PLUS}>JuniorPlus</NavLink>\n                <div className={n.block}></div>\n            </nav>\n        </div>\n    )\n}\n\nexport default Header\n","import React from 'react'\nimport {BrowserRouter,HashRouter} from 'react-router-dom'\nimport Header from './Header'\nimport Pages from './Pages'\n\n\nfunction HW5() {\n    return (\n        <div>\n            {/*в gh-pages лучше работает HashRouter*/}\n\n            <BrowserRouter>\n\n            <Header/>\n\n            <Pages/>\n\n            </BrowserRouter>\n        </div>\n    )\n}\n\nexport default HW5\n","import React from 'react'\nimport s from './App.module.css'\nimport HW1 from '../../../p2-homeworks/h1/HW1'\nimport HW2 from \"../../../p2-homeworks/h2/HW2\"\nimport HW3 from '../../../p2-homeworks/h3/HW3'\nimport HW4 from '../../../p2-homeworks/h4/HW4'\nimport HW5 from '../../../p2-homeworks/h5-rrd-v6/HW5'\nfunction App() {\n    return (\n        <div className={s.App}>\n            <div>react homeworks:</div>\n\n            {/*<HW1/>*/}\n            {/*<HW2/>*/}\n            {/*<HW3/>*/}\n            {/*<HW4/>*/}\n            <HW5/>\n\n        </div>\n    )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL,\n            window.location.href\n        )\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'}\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            )\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister()\n            })\n            .catch(error => {\n                console.error(error.message)\n            })\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './p1-main/m1-ui/u1-app/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App/>,\n    document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}